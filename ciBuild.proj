<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.5">

    <PropertyGroup>
        <!-- Input parameters -->
        <Version Condition="'$(VERSION)' == ''">0.0.0.0</Version>
        <Version Condition="'$(VERSION)' != ''">$(VERSION)</Version>
        <IsPreRelease>true</IsPreRelease>
        <BuildConfiguration>Release</BuildConfiguration>
        <ProjectDirectory>$(MSBuildProjectDirectory)</ProjectDirectory>
        <TemplatesDll>$(ProjectDirectory)\Sdl.Web.Tridion.Templates.Legacy\bin\$(BuildConfiguration)\Sdl.Web.Tridion.Templates.merged.dll</TemplatesDll>
        <CmsTargetDefinitionFile>dxadevweb85.xml</CmsTargetDefinitionFile>
        <NuGetRepositoryUrl></NuGetRepositoryUrl>

        <NuGet>&quot;$(ProjectDirectory)\_tools\NuGet.exe&quot;</NuGet>
        <NuGetPackageDirectory>$(ProjectDirectory)\_NuGet</NuGetPackageDirectory>
        
        <VersionMajor>$(Version.Split('.')[0])</VersionMajor>
        <VersionMinor>$(Version.Split('.')[1])</VersionMinor>
        <VersionPatch>$(Version.Split('.')[2])</VersionPatch>
        <VersionBuild>$(Version.Split('.')[3])</VersionBuild>
        <PreReleaseLabel Condition="'$(IsPreRelease)' == 'true'">-alpha-$([System.DateTime]::Now.ToString("yyyyMMddHHmm"))</PreReleaseLabel>
        <PackageVersion>$(VersionMajor).$(VersionMinor).$(VersionPatch)$(PreReleaseLabel)</PackageVersion>
        
        <!--Tools-->
        <MsBuildExe>C:\Program Files (x86)\MSBuild\12.0\Bin\MSBuild.exe</MsBuildExe>
        <CmToolsDir>C:\_cm_tools</CmToolsDir>
    
        <MsTestExe Condition="'$(MsTestExe)'=='' And Exists('$(MSBuildProgramFiles32)\Microsoft Visual Studio 14.0\Common7\IDE\MSTest.exe')">$(MSBuildProgramFiles32)\Microsoft Visual Studio 14.0\Common7\IDE\MSTest.exe</MsTestExe>
        <MsTestExe Condition="'$(MsTestExe)'=='' And Exists('$(MSBuildProgramFiles32)\Microsoft Visual Studio 12.0\Common7\IDE\MSTest.exe')">$(MSBuildProgramFiles32)\Microsoft Visual Studio 12.0\Common7\IDE\MSTest.exe</MsTestExe>
  </PropertyGroup>


    <!-- =============================================================================================================================================  -->
    <Target Name="Build">
        <Message Text="Start build..." Importance="high" />
        
        <CallTarget Targets="PrepareBuild"/>
        <CallTarget Targets="RunBuild"/>
        <CallTarget Targets="Test"/>
        <CallTarget Targets="CreatePackages"/>
        <CallTarget Targets="PublishPackages" Condition="'$(NuGetRepositoryUrl)' != ''"/>
        <!-- NOTE: Not calling DeployOutput here; should be called separately by Jenkins build -->
    </Target>

    <!-- =============================================================================================================================================  -->
    <Target Name="PrepareBuild">
        <Message Text="Preparing build..." Importance="high" />

        <Message Text="Clearing NuGet cache..."/>
        <Exec Command="$(NuGet) locals all -Clear" />

        <Message Text="Restoring NuGet packages..."/>
        <Exec Command="_tools\RestorePackages DxaContentManagement.sln" WorkingDirectory="$(ProjectDirectory)" />
        
        <ItemGroup>
            <AssemblyInfo Include="[assembly: AssemblyVersion(&quot;$(VersionMajor).$(VersionMinor).$(VersionPatch).0&quot;)]" />
            <AssemblyInfo Include="[assembly: AssemblyFileVersion(&quot;$(Version)&quot;)]" />
            <AssemblyInfo Include="[assembly: AssemblyInformationalVersion(&quot;$(PackageVersion)&quot;)]" />
            <AssemblyInfo Include="[assembly: AssemblyCopyright(&quot;Copyright Â© 2014-$([System.DateTime]::Now.ToString(&quot;yyyy&quot;)) SDL Group&quot;)]" />
        </ItemGroup>

        <Message Text="Updating CommonAssemblyInfo..."/>
        <WriteLinesToFile File="$(ProjectDirectory)\CommonAssemblyInfo.cs" Overwrite="False" Lines="@(AssemblyInfo)" />
    </Target>

    <!-- =============================================================================================================================================  -->
    <Target Name="RunBuild">
        <Message Text="Running build commands..." Importance="high" />

        <MSBuild Projects="$(ProjectDirectory)\Sdl.Web.DXAResolver\Sdl.Web.DXAResolver.csproj" Properties="Configuration=$(BuildConfiguration);Platform=AnyCPU" StopOnFirstFailure="true" />
        <MSBuild Projects="$(ProjectDirectory)\Sdl.Web.Tridion.Templates\Sdl.Web.Tridion.Templates.csproj" Properties="Configuration=$(BuildConfiguration);Platform=AnyCPU" StopOnFirstFailure="true" />
        <MSBuild Projects="$(ProjectDirectory)\Sdl.Web.Tridion.Templates.Legacy\Sdl.Web.Tridion.Templates.Legacy.csproj" Properties="Configuration=$(BuildConfiguration);Platform=AnyCPU" StopOnFirstFailure="true" />
        <MSBuild Projects="$(ProjectDirectory)\Sdl.Web.Tridion.Templates.Tests\Sdl.Web.Tridion.Templates.Tests.csproj" Properties="Configuration=$(BuildConfiguration);Platform=AnyCPU" StopOnFirstFailure="true" />
    </Target>

    <!-- =============================================================================================================================================  -->
    <Target Name="CreatePackages">
        <Message Text="Creating NuGet packages in '$(NuGetPackageDirectory)' ..." Importance="high" />

        <Message Text="Package Version: $(PackageVersion)" />
        
        <Exec Command="$(NuGet) pack Sdl.Dxa.DataModel.nuspec -Version $(PackageVersion)" WorkingDirectory="$(NuGetPackageDirectory)" />
    </Target>

    <!-- =============================================================================================================================================  -->
    <Target Name="PublishPackages">
        <Message Text="Publishing NuGet packages to '$(NuGetRepositoryUrl)' ..." Importance="high" />

        <Exec Command="$(NuGet) push Sdl.Dxa.DataModel.$(PackageVersion).nupkg -Source $(NuGetRepositoryUrl)" WorkingDirectory="$(NuGetPackageDirectory)" />
    </Target>
    
    <!-- =============================================================================================================================================  -->
    <Target Name="DeployOutput">
      <Message Text="Deploying '$(TemplatesDll)' to CMS..." />
        
        <Exec Command="TcmUploadAssembly.exe $(CmsTargetDefinitionFile) /folder:tcm:2-17-2 /verbose &quot;$(TemplatesDll)&quot;" WorkingDirectory="$(CmToolsDir)" />
    </Target>
 
    <!-- =============================================================================================================================================  -->
    <Target Name="Test" Condition="'$(BuildConfiguration)' == 'Release'">
        <Message Text="Running unit tests..." />
    
        <Exec Command='packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -register:user "-target:$(MsTestExe)" "-targetargs:/testcontainer:Sdl.Web.Tridion.Templates.Tests\bin\$(BuildConfiguration)\Sdl.Web.Tridion.Templates.Tests.dll /testsettings:MsTest.testsettings /resultsfile:TestResults.trx" "-filter:+[Sdl.*]* -[*Test*]*" -output:CoverageReports\Coverage.xml"'/>      

        <Exec Command='packages\ReportGenerator.2.4.4.0\tools\ReportGenerator.exe "-reports:CoverageReports\Coverage.xml" "-targetdir:CoverageReports"'/>
    </Target>
</Project>